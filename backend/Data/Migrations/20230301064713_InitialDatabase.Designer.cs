// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DPC_Context))]
    [Migration("20230301064713_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Cliente", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Codigo"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("DataInicio")
                        .HasColumnType("text");

                    b.Property<bool?>("MoedaEstrangeira")
                        .HasColumnType("boolean");

                    b.Property<bool?>("NecessitaMarketing")
                        .HasColumnType("boolean");

                    b.Property<bool?>("NecessitaTI")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("SistemaId")
                        .HasColumnType("integer");

                    b.Property<bool?>("VIP")
                        .HasColumnType("boolean");

                    b.HasKey("Codigo");

                    b.HasIndex("SistemaId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Codigo = 1,
                            Ativo = true,
                            DataInicio = "2023-02-20",
                            MoedaEstrangeira = false,
                            NecessitaMarketing = false,
                            NecessitaTI = false,
                            Nome = "Cliente Teste",
                            SistemaId = 1,
                            VIP = false
                        });
                });

            modelBuilder.Entity("Data.Models.Contabilidade", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Codigo"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("DataFim")
                        .HasColumnType("text");

                    b.Property<string>("DataInicio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Codigo");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contabilidade");
                });

            modelBuilder.Entity("Data.Models.Contato", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Codigo"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("Data.Models.Sistema", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Codigo");

                    b.ToTable("Sistemas");

                    b.HasData(
                        new
                        {
                            Codigo = 1,
                            Nome = "ERP Financeiro"
                        },
                        new
                        {
                            Codigo = 2,
                            Nome = "ERP Contábil"
                        },
                        new
                        {
                            Codigo = 3,
                            Nome = "ERP Fiscal"
                        },
                        new
                        {
                            Codigo = 4,
                            Nome = "ERP DP"
                        });
                });

            modelBuilder.Entity("Data.Models.Cliente", b =>
                {
                    b.HasOne("Data.Models.Sistema", "Sistema")
                        .WithMany("Clientes")
                        .HasForeignKey("SistemaId");

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("Data.Models.Contabilidade", b =>
                {
                    b.HasOne("Data.Models.Cliente", "Cliente")
                        .WithMany("Contabilidades")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Data.Models.Contato", b =>
                {
                    b.HasOne("Data.Models.Cliente", "Cliente")
                        .WithMany("Contatos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Data.Models.Cliente", b =>
                {
                    b.Navigation("Contabilidades");

                    b.Navigation("Contatos");
                });

            modelBuilder.Entity("Data.Models.Sistema", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
